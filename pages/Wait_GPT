temp='';

E_E='';

function xhr(url, data) {
    const request = new XMLHttpRequest();
    request.open('POST', url, false);
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestHeader('Authorization', `Bearer ${Key}`);
    request.send(data);

    if (request.status === 200) {
        return request.responseText;
    }
}

function chat_GPT(message) {
    Key = atob(atob('YzJzdGRVazNaa0pJV0c5ck1tMXZTVEZ2VkZsdWR6RlVNMEpzWW10R1NtZHRTWGQxU1hGaU1scE5kR1ZZYldFM1pGQnQ='));
    message = '' || message;
    const url = 'https://api.openai.com/v1/chat/completions';

    const data = JSON.stringify({
        "model": "gpt-3.5-turbo",
        "messages": [{"role": "user", "content": message}],
        "temperature": temp
    });

    const responseText = xhr(url, data);

    return JSON.parse(responseText).choices[0].message.content;
}

function getSelectedElement(){
    var parentElement = null;
    var selection = window.getSelection();
    if (selection.rangeCount > 0) {
        var range = selection.getRangeAt(0);
        parentElement = range.commonAncestorContainer;
    }
    return parentElement;
}

function getSelectedText() {
    var selectedText = '';
    if (window.getSelection) {
        selectedText = window.getSelection().toString();
    } else if (document.selection && document.selection.type != 'Control') {
        selectedText = document.selection.createRange().text;
    }
    return selectedText;
}

function selectText(element) {
    if (document.selection) { 
        var range = document.body.createTextRange();
        range.moveToElementText(element);
        range.select();
    } else if (window.getSelection) { 
        var range = document.createRange();
        range.selectNodeContents(element);
        var selection = window.getSelection();
        selection.removeAllRanges();
        selection.addRange(range);
    }
}

function get_select_menu(){

escapeHTMLPolicy = trustedTypes.createPolicy("forceInner",{createHTML: (to_escape) => to_escape});

const el= E_E.parentElement.parentElement.parentElement.childNodes[1].querySelectorAll('span');

bound=el.length-1;

result=[];

result.push('write just only the index of the answer \n '+E_E.parentElement.parentElement.innerText);
for (let index = 0; index < bound; index++) {

result.push(index+':'+el[index+1].innerText);

}
return result.join('\n')
}

function get_select(){

const el=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role="radio"]');

result=[];

result.push('write only the index of the answer \n '+E_E.parentElement.parentElement.querySelector('span').innerText);

bound=el.length;

for (let index = 0; index < bound; index++) {
result.push(index+':'+el[index].parentElement.parentElement.querySelector('span').innerText)
}

return result.join('\n')

}

function get_multi_select(){
const el=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role=checkbox]');

result=[];

result.push('it is multi select question write only the index of each right answer in array, write only valid javascript array , I want it text ready to eval  \n '+E_E.innerText);

bound=el.length;

for (let index = 0; index < bound; index++) {
result.push(index+':'+el[index].nextSibling.querySelector('span').innerText)
}

return result.join('\n')
}

function get_select_menu(){

escapeHTMLPolicy = trustedTypes.createPolicy("forceInner",{createHTML: (to_escape) => to_escape});

const el= E_E.parentElement.parentElement.childNodes[1].querySelectorAll('span');

bound=el.length-1;

result=[];

result.push('write just only the index of the answer \n '+E_E.parentElement.parentElement.innerText);
for (let index = 0; index < bound; index++) {

result.push(index+':'+el[index+1].innerText);

}
return result.join('\n')
}

function get_type_answer(){

const el=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role]');

result=[];

result.push('Answer the question make the answer as less as possible\n '+el[0].childNodes[0].innerText);

return result.join('\n');

}

function get_top_row(){

result=[];

if(detect('radiogroup')){dr='radiogroup'}else if(detect('group')){dr='group'}

const el=E_E.parentElement.parentElement.parentElement.parentElement.querySelectorAll(`[role=${dr}]`)[0].previousElementSibling.childNodes;

for (let index = 0; index < el.length-1; index++) {
   result.push(index+':'+el[index+1].innerText)
}

return result.join('\n')
}

function get_right_column(){

result=[];

if(detect('group')){dr='group'}else if(detect('radiogroup')){dr='radiogroup'}

const el=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll(`[role=${dr}]`);

for (let index = 0; index < el.length; index++) {
   result.push(index+':'+el[index].querySelector('div').innerText)
}

return result.join('\n')
}

function row_start(){
return 'write only the index of the answer \n '+E_E.innerText+'\n'+get_right_column()
}
function column_start(){
return 'write only the index of the answer \n '+E_E.innerText+'\n'+get_top_row()
}

function simulateInput(inputElement, text) {

  if (inputElement) {

    inputElement.value = text;

    const event = new Event('input', {
      bubbles: true,
      cancelable: true,
    });

    inputElement.dispatchEvent(event);
  } else {
    console.error(`Input element not found.`);
  }
}
function get_password(){simulateInput(E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelector('input'),JSON.parse(E_E.parentElement.parentElement.parentElement.parentElement.parentElement.getAttribute('data-params').split(',')[10])[0]);}
function detect(type){
res=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll(`[role="${type}"]`)[0]||false;
if(res!=false){res=true}
return res
}

function run_all(){
try {role=(E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role]').length==2)} catch (error) {role=false}

try {
get_password();
} catch (error) {

if(detect('radio')&&!(E_E.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role=radiogroup]').length>1)){

temp=0.7;

method=get_select();

cm=chat_GPT(method);

console.log(cm);

E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role="radio"]')[parseInt(cm)].parentElement.parentElement.querySelector('span').click();

}else if(detect('checkbox')){

temp=0.1;

method=get_multi_select();

cm=chat_GPT(method);

console.log(cm);

answers=JSON.parse(cm);

for (let index = 0; index < answers.length; index++) {
    E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelectorAll('[role=checkbox]')[answers[index]].click()

}

}else if(detect('option')){

temp=0.7;

method=get_select_menu();

cm=chat_GPT(method);

console.log(cm);

const eit=E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelector('[tabindex="0"]').querySelector('span');

old_eit=eit.innerText;

eit.innerText='choose '+cm;

}else if(role){

temp=0.7;

method=get_type_answer();

cm=chat_GPT(method);

console.log(cm);

simulateInput(E_E.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.querySelector('input'),cm);

}else if(detect('radiogroup')){

temp=0.1;

ce=E_E.parentElement.parentElement.querySelector('span');

if(ce!=null){method=column_start()}else{method=row_start().replaceAll('\t','')};

cm=chat_GPT(method);

console.log(cm);

if(ce!=null){
E_E.parentElement.parentElement.querySelectorAll('[role=radio]')[parseInt(cm)].click();
}else{
E_E.parentElement.parentElement.parentElement.querySelectorAll('[role="radiogroup"]')[parseInt(cm)].querySelector('span').childNodes[Array.from(E_E.parentElement.children).indexOf(E_E)].querySelector('div').querySelector('div').click();
}



}

}

}

function set_button() {
    escapeHTMLPolicy = trustedTypes.createPolicy("forceInner",{createHTML: (to_escape) => to_escape});

E_E.parentElement.parentElement.parentElement.querySelector('span').outerHTML=escapeHTMLPolicy.createHTML(`<button style="background-color:transparent;border-color:transparent;">${E_E.parentElement.parentElement.parentElement.querySelector('span').outerHTML}</button>`);

}

function run_all_(params) {
    selectText(this.childNodes[0]);run_all();

}

function set_script_buttons() {
const elm=document.querySelectorAll('button');

for (let index = 0; index < elm.length; index++) {
    elm[index].onclick=run_all_;
}
}

function get_elements(){

elem=get_elements_old();

for (let index = 0; index < elem.length; index++) {

const el=elem[index].querySelector('span').parentElement.parentElement.querySelectorAll('[role=radiogroup]');
if(el.length!=0){
el2=el[0].previousElementSibling.childNodes;
for (let inde = 0; inde < el2.length-1; inde++) {
    set_button(el2[inde+1])
}
for (let ind = 0; ind < el.length; ind++) {
set_button(el[ind].querySelector('span').querySelector('div'))
}
}else{
set_button(elem[index].querySelector('span'))

}
}

document.querySelectorAll('#runall').forEach(function(element) {
  element.addEventListener('click', function() {
    E_E=this;
    run_all();
  });
});

}

function get_elements_old(){

bound=document.querySelectorAll('span').length-1;

resul=[];

for (let index = 0; index < bound; index++) {

const cel=document.body.querySelectorAll('span')[index].parentElement.parentElement.parentElement.parentElement;

if(cel.getAttribute('role')!='listbox'&&cel.nodeName!='LABEL'&&cel.nodeName!='BODY'&&(cel.querySelector('[role=radio]')==null||cel.querySelector('[role=checkbox]')==null||cel.querySelector('[role=option]')==null)){

resul.push(cel)

}

}

resul=[...new Set(resul)];

return resul
}

function set_elements(){elem=get_elements();

for (let index = 0; index < elem.length; index++) {

set_button(elem[index].querySelector('span'))

}}

function set_button(ele) {
    escapeHTMLPolicy = trustedTypes.createPolicy("forceInner",{createHTML: (to_escape) => to_escape});

ele.outerHTML=escapeHTMLPolicy.createHTML(ele.outerHTML.replace('class=',' id="runall" class='));

}

function set_script_buttons() {
const elm=document.querySelectorAll('button');

for (let index = 0; index < elm.length; index++) {
    elm[index].onclick=run_all_;
}
}

get_elements();

function tempAlert(msg,duration)
{escapeHTMLPolicy = trustedTypes.createPolicy("forceInner",{createHTML: (to_escape) => to_escape});
 var el = document.createElement("div");
el.onclick=function remsel(){this.style.display='none'};
 el.setAttribute("style","position:fixed;top:40%;left:20%;background-color:white;");
 el.innerHTML = escapeHTMLPolicy.createHTML(msg);
 setTimeout(function(){
  el.parentNode.removeChild(el);
 },duration);
 document.body.appendChild(el);
}
